# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: '3'

vars:
  VERSION:
    sh: git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD
  BRANCH: 0.3.0
  ARCH: "{{ARCH}}"
  OS: "{{OS}}"
  BIN: "{{.OS}}/{{.ARCH}}"
  EXE: '{{if eq .OS "windows"}}.exe{{end}}'

tasks:

  bin:
  - mkdir -p {{.BIN}}

  download:
    dir: "{{.BIN}}"
    cmds:
    - ht -o {{.TGT}} -d {{.SRC}}
    - '{{if eq .OS "windows"}}mv {{.TGT}} {{.TGT}}.exe{{else}}chmod +x {{.TGT}}{{end}}'
    status:
    - test -e {{.TGT}}{{.EXE}}

  kubectl:
    cmds:
    - task: download
      vars:
        SRC: "https://dl.k8s.io/release/v1.26.0/bin/{{OS}}/{{.ARCH}}/kubectl{{.EXE}}"
        TGT: kubectl

  kind:
    cmds:
    - task: download
      vars:
        SRC: "https://kind.sigs.k8s.io/dl/v0.17.0/kind-{{OS}}-{{.ARCH}}"
        TGT: kind

  nuv:
    dir: ".."
    cmds:
    - >
      GOOS={{.OS}} GOARCH={{.ARCH}} 
      go build 
      -ldflags "-X main.NuvVersion={{.VERSION}} -X main.NuvBranch={{.BRANCH}}"
      -o bin/{{.BIN}}/nuv{{.EXE}}

  clean:
    desc: cleanup {{.OS}}/{{.ARCH}}
    cmds:
    - rm {{.BIN}}/*

  getall:
    desc: download all tools for {{.OS}}-{{.ARCH}}
    cmds:
    - task: nuv
    - task: kind
    - task: kubectl

  windows-latest:
    desc: build a msi installer for windows
    cmds:
    - test "{{OS}}" = "windows"
    - echo {{.VERSION}} >windows/version.txt
    - ./nuv getall OS=windows ARCH=amd64
    - ./nuv windows build
    - cp windows/*.msi ..

  macos-latest:
    desc: build a pkg installer for macos
    cmds:
    - test "{{OS}}" = "darwin"
    - echo {{.VERSION}} >darwin/version.txt
    - ./nuv getall OS=darwin ARCH=amd64
    - ./nuv getall OS=darwin ARCH=arm64
    - ./nuv darwin build ARCH=amd64
    - ./nuv darwin build ARCH=arm64
    - cp darwin/*.pkg ..

  ubuntu-latest:
    desc: build a deb and rpm installer for linux
    cmds:
    - test "{{OS}}" = "linux"
    - echo {{.VERSION}} >linux/version.txt
    - cp LICENSE linux/LICENSE
    - ./nuv getall OS=linux ARCH=amd64
    - ./nuv getall OS=linux ARCH=arm64
    - ./nuv linux build ARCH=amd64
    - ./nuv linux build ARCH=arm64
    - cp linux/*.deb linux/*.rpm ..
